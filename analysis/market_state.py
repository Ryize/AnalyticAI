from abc import ABC, abstractmethod


class MarketState(ABC):
    """–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ä—ã–Ω–∫–∞."""

    @abstractmethod
    def message(self) -> str: ...


class BullishState(MarketState):
    def message(self) -> str:
        return "üìà –ü—Ä–æ–≥–Ω–æ–∑: –∞–∫—Ü–∏–∏, —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, –ø–æ–π–¥—É—Ç –í–í–ï–†–•."


class BearishState(MarketState):
    def message(self) -> str:
        return "üìâ –ü—Ä–æ–≥–Ω–æ–∑: –æ–∂–∏–¥–∞–µ—Ç—Å—è —Å–Ω–∏–∂–µ–Ω–∏–µ —Ä—ã–Ω–∫–∞."


class NeutralState(MarketState):
    def message(self) -> str:
        return "–†—ã–Ω–æ–∫ —Å—Ç–∞–±–∏–ª–µ–Ω"
